#include<bits/stdc++.h>
using namespace std;

class Solution{
  public:
      BinarySearch(int ar[],int n,int left,int right,int target)
      {
          while(left<=right)
          {
              int mid= (left+right)/2;
              if(ar[mid]==target)
              {
                  return mid;
              }
              else if(ar[mid]>target)
              {
                 if(ar[left]>target)
                 {
                     left= left+1;
                 }
                 else
                 {
                     right= mid-1;
                 }
              }
              else
              {
                  if(ar[right]<target)
                  {
                      right= right-1;
                  }
                  else
                  {
                      left= mid+1;
                  }
              }
          }
          return -1;

      }

};

int main()
{
    int n;
    cin>>n;
    int ar[n];
    for(int i=0;i<n;i++)
    {
        cin>>ar[i];
    }
    int target;
    cin>>target;
    Solution ob;
    int ans = ob.BinarySearch(ar,n,0,n-1,target);
    cout<<ans<<endl;


}


/* 
 Before it was sorted and then it just moved a part. that means there is 2 different sorted parts. 
*/

conceptual clearing video : https://www.youtube.com/watch?v=U8XENwh8Oy8&t=553s    ( watch only the concept part carefully ) and make your own code. or revice it from here
